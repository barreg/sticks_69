import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:sticks_69/DatabaseService.dart';
import 'package:sticks_69/MessagingService.dart';
import 'package:sticks_69/Models.dart';



/// Used to create user-dependant objects that need to be accessible by all widgets.
/// This widget should live above the [MaterialApp].
/// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({Key key, @required this.builder}) : super(key: key);
  final Widget Function(BuildContext, AsyncSnapshot<FirebaseUser>) builder;

  @override
  Widget build(BuildContext context) {
    print('AuthWidgetBuilder rebuild');

    return StreamBuilder<FirebaseUser>(
      stream: FirebaseAuth.instance.onAuthStateChanged,
      builder: (context, snapshot) {
        print('StreamBuilder: ${snapshot.connectionState}');
        final FirebaseUser user = snapshot.data;
        if (user != null) {
          /// In this MultiProvider you can pass anything you want access everywhere in the App
          /// It is what was the Singleton before. If, for example, you want to add some GPS service at a later point, this is the place
          /// You can access those with Provider.of<SERVICENAME>(context) within the app
          return MultiProvider(providers: [
            Provider<DatabaseService>(
                create: (_) => DatabaseService(uid: user.uid)),
            Provider<MessagingService>(
                create: (_) => MessagingService(uid: user.uid)),
            StreamProvider<Userdata>.value(
              value: DatabaseService.userRef
                  .document(user.uid)
                  .snapshots()
                  .map((snap) {
                return Userdata.fromJson(snap.documentID, snap.data);
              }),
            ),
          ], child: builder(context, snapshot));
        }
        return builder(context, snapshot);
      },
    );
  }
}
